name: build

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        required: true
        description: Set this to true to release the repository
    secrets:
      CARGO_REGISTRY_TOKEN:
        description: crates.io API token
        required: false

jobs:
  build:
    runs-on: ubuntu-22.04

    outputs:
      version: ${{ steps.release.outputs.version }}
      released-new-version: ${{ steps.release-check.outputs.released-new-version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 50
          fetch-tags: true

      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Run cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install tools
        shell: bash
        run: |
          cargo binstall --no-confirm cargo-readme@3.3.1
          cargo binstall --no-confirm cargo-edit@0.12.2

      - name: Run clippy
        if: '!inputs.release'
        shell: bash
        run: cargo clippy -- -D warnings

      - name: Run cargo fmt
        if: '!inputs.release'
        shell: bash
        run: cargo fmt --check

      - name: Build the binary
        shell: bash
        run: cargo build --release

      - name: Semver release
        id: release
        uses: cocogitto/cocogitto-action@v3
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release: ${{ inputs.release }}
          git-user: 'Cocogitto'
          git-user-email: 'no-reply@vtavernier.github.io'

      - name: Check if a new release happened
        id: release-check
        shell: bash
        run: |
          if [[ -f GITHUB_CHANGELOG.md ]]; then
            echo "released-new-version=true" >> $GITHUB_OUTPUT
          fi

      - name: Build docs
        if: inputs.release
        shell: bash
        run: cargo doc --no-deps

      - name: Upload pages artifact
        if: inputs.release
        uses: actions/upload-artifact@v4
        with:
          name: pages
          path: target/doc

      - name: Upload workspace artifact
        if: inputs.release
        uses: actions/upload-artifact@v4
        with:
          name: workspace
          path: |
            .
            !target

  crates-io:
    runs-on: ubuntu-22.04

    needs: build

    if: >
      inputs.release &&
      github.ref == 'refs/heads/master' &&
      github.event_name == 'push' &&
      needs.build.outputs.released-new-version

    concurrency:
      group: pages
      cancel-in-progress: false

    permissions:
      actions: read

    environment:
      name: crates-io

    steps:
      - name: Download workspace
        uses: actions/download-artifact@v4
        with:
          name: workspace
          path: .

      - name: Run cargo login
        shell: bash
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          cargo login "$CARGO_REGISTRY_TOKEN"

      - name: Run cargo publish
        shell: bash
        run: cargo publish

  publish:
    runs-on: ubuntu-22.04

    needs: build

    if: inputs.release && github.ref == 'refs/heads/master' && github.event_name == 'push'

    concurrency:
      group: pages
      cancel-in-progress: false

    permissions:
      actions: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pages
          path: doc

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
